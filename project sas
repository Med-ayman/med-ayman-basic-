#include <stdio.h>
#include <string.h>

struct date {
    int jour;
    int mois;
    int annee;
};


struct etudiant {
    int numero;
    char nom[50];
    char prenom[50];
    char departement[50];
    struct date date_naissance;
    float note_generale;};

struct etudiant t1[100];
int nombre_etudiants = 0;
int dernier_numero = 1;

// Fonction pour ajouter
void ajouter() {

 struct etudiant e;

    // Génération automatique du numéro unique
    e.numero = dernier_numero;
    dernier_numero++;  // Incrémenter pour le prochain étudiant

    printf("Numero d'etudiant (automatique): %d\n", e.numero);

    printf("Nom: ");
    scanf("%s", e.nom);

    printf("Prenom: ");
    scanf("%s", e.prenom);

    printf("Departement: ");
    scanf("%s", e.departement);

    printf("Date de naissance:\n");

    printf("Jour: ");
    scanf("%d", &e.date_naissance.jour);

    printf("Mois: ");
    scanf("%d", &e.date_naissance.mois);

    printf("Annee: ");
    scanf("%d", &e.date_naissance.annee);

    // Vérification de la note générale entre 0 et 20
    do {
        printf("Note generale : ");
        scanf("%f", &e.note_generale);
        if (e.note_generale < 0 || e.note_generale > 20) {
            printf("Erreur: La note doit être un nombre entre 0 et 20. Veuillez reessayer.\n");
        }
    } while (e.note_generale < 0 || e.note_generale > 20);

    t1[nombre_etudiants] = e;
    nombre_etudiants++;
    printf("Etudiant ajoute avec succes\n");
}

// Fonction pour afficher des statistiques
void statistiques() {
    printf("\nStatistiques des étudiants :\n");

    // 1. Nombre total d'étudiants inscrits
    printf("Nombre total d'etudiants inscrits : %d\n", nombre_etudiants);

    // 2. Nombre d'étudiants par département
    char departements[100][50];
    int nombre_departements = 0;
    int nombre_etudiants_par_departement[100] = {0};

    for (int i = 0; i < nombre_etudiants; i++) {
        int trouve = 0;
        for (int j = 0; j < nombre_departements; j++) {
            if (strcmp(departements[j], t1[i].departement) == 0) {
                nombre_etudiants_par_departement[j]++;
                trouve = 1;
                break;
            }
        }
        if (!trouve) {
            strcpy(departements[nombre_departements], t1[i].departement);
            nombre_etudiants_par_departement[nombre_departements]++;
            nombre_departements++;
        }
    }

    printf("Nombre d'etudiants par departement:\n");
    for (int i = 0; i < nombre_departements; i++) {
        printf("Département '%s': %d étudiants\n", departements[i], nombre_etudiants_par_departement[i]);
    }

    // 3. Afficher les étudiants ayant une moyenne générale supérieure à un certain seuil
    float seuil;
    printf("Entrez le seuil de note generale : ");
    scanf("%f", &seuil);

    printf("Etudiants ayant une note superieure à %f:\n", seuil);
    int trouve = 0;
    for (int i = 0; i < nombre_etudiants; i++) {
        if (t1[i].note_generale > seuil) {
            printf("Numéro: %d\n", t1[i].numero);
            printf("Nom: %s\n", t1[i].nom);
            printf("Prénom: %s\n", t1[i].prenom);
            printf("Département: %s\n", t1[i].departement);
            printf("Note générale: %f\n", t1[i].note_generale);
            printf(".........................................\n");
            trouve = 1;
        }
    }

    if (!trouve) {
        printf("Aucun etudiant n'a une note superieure a %f\n", seuil);
    }
}

// Fonction pour modifier ou supprimer un étudiant
void modifier_ou_supprimer_etudiant(int numero) {

    for (int i = 0; i < nombre_etudiants; i++) {
        if (t1[i].numero == numero) {

            int choix;
           printf("Choisissez une option: ");
            printf("1. Modifier les informations\n");
            printf("2. Supprimer l'etudiant\n");
            scanf("%d", &choix);

            if (choix == 1) {

                printf("Nouveau nom: ");
                scanf("%s", t1[i].nom);

                printf("Nouveau prenom: ");
                scanf("%s", t1[i].prenom);

                printf("Nouveau departement: ");
                scanf("%s", t1[i].departement);

                // Mise à jour de la date de naissance
                printf("Nouvelle date de naissance:\n");

                printf("Jour: ");
                scanf("%d", &t1[i].date_naissance.jour);

                printf("Mois: ");
                scanf("%d", &t1[i].date_naissance.mois);

                printf("Annee: ");
                scanf("%d", &t1[i].date_naissance.annee);

                printf("Nouvelle note generale: ");
                scanf("%f", &t1[i].note_generale);
                printf("Informations modifiées avec succes\n");
            }
            else if (choix == 2) {
                // Supprimer l'étudiant
                for (int j = i; j < nombre_etudiants - 1; j++) {
                    t1[j] = t1[j + 1];
                }
                nombre_etudiants--;
                printf("Etudiant supprime avec succes\n");
            }
            return 0 ;
        }
    }
    printf("Etudiant non trouve\n");
}

// Fonction pour afficher tous les étudiants
void afficher_tous_les_etudiants() {
    if (nombre_etudiants == 0) {
        printf("Aucun etudiant enregistre.\n");
        return 0 ;
    }
    printf("Liste des etudiants:\n");
    for (int i = 0; i < nombre_etudiants; i++) {
        printf("Numero: %d\n", t1[i].numero);
        printf("Nom: %s\n", t1[i].nom);
        printf("Prenom: %s\n", t1[i].prenom);
        printf("Departement: %s\n", t1[i].departement);
        printf("Date de naissance: %d/%d/%d\n",t1[i].date_naissance.jour,t1[i].date_naissance.mois,t1[i].date_naissance.annee);
        printf("Note generale: %f\n", t1[i].note_generale);
        printf(".......................................\n");
    }
}

// Fonction pour calculer les moyennes
void calculer_moyennes() {
    float somme_notes_universite = 0;
    int compteur_universite = 0;
    float somme_notes_par_departement[100] = {0};
    int compteur_par_departement[100] = {0};
    char departements[100][50];
    int nombre_departements = 0;

    for (int i = 0; i < nombre_etudiants; i++) {
        // Calcul de la moyenne générale de l'université
        somme_notes_universite += t1[i].note_generale;
        compteur_universite++;

        // Calcul de la moyenne par département
        int trouve = 0;
        for (int j = 0; j < nombre_departements; j++) {
            if (strcmp(departements[j], t1[i].departement) == 0) {
                somme_notes_par_departement[j] += t1[i].note_generale;
                compteur_par_departement[j]++;
                trouve = 1;
                break;
            }
        }
        if (!trouve) {
            strcpy(departements[nombre_departements], t1[i].departement);
            somme_notes_par_departement[nombre_departements] = t1[i].note_generale;
            compteur_par_departement[nombre_departements] = 1;
            nombre_departements++;
        }
    }

    // Affichage de la moyenne générale
    if (compteur_universite > 0) {
        float moyenne_universite = somme_notes_universite / compteur_universite;
        printf("Moyenne générale de l'université: %f\n", moyenne_universite);
    } else {
        printf("Aucun étudiant enregistre.\n");
    }

    // Affichage des moyennes par département
    printf("Moyennes par departement:\n");
    for (int i = 0; i < nombre_departements; i++) {
        if (compteur_par_departement[i] > 0) {
            float moyenne_departement = somme_notes_par_departement[i] / compteur_par_departement[i];
            printf("Departement '%s': %f\n", departements[i], moyenne_departement);
        }
    }
}

// Fonction pour rechercher un étudiant par son nom
void rechercher_etudiant() {
    char nom[50];
    printf("Entrez le nom de l'etudiant: ");
    scanf("%s", nom);

    int trouve = 0;
    for (int i = 0; i < nombre_etudiants; i++) {
        if (strcmp(t1[i].nom, nom) == 0) {
            printf("Numero: %d\n", t1[i].numero);
            printf("Nom: %s\n", t1[i].nom);
            printf("Prenom: %s\n", t1[i].prenom);
            printf("Département: %s\n", t1[i].departement);
            printf("Date de naissance: %d/%d/%d\n",
                   t1[i].date_naissance.jour,
                   t1[i].date_naissance.mois,
                   t1[i].date_naissance.annee);
            printf("Note generale: %f\n", t1[i].note_generale);
            printf("..........................................\n");
            trouve = 1;
        }
    }

    if (!trouve) {
        printf("Aucun étudiant trouve avec ce nom\n");
    }
}

// Fonction principale pour le menu
int main() {
    int choix, numero;

    do {
        printf("\nMenu:\n");
        printf("1. Ajouter un etudiant\n");
        printf("2. Modifier ou supprimer un etudiant\n");
        printf("3. Afficher tous les etudiants\n");
        printf("4. Calculer les moyennes\n");
        printf("5. Rechercher un etudiant\n");
        printf("6. Afficher les statistiques\n");  // Nouvelle option pour les statistiques
        printf("7. Quitter\n");
        printf("Votre choix: ");
        scanf("%d", &choix);

        switch (choix) {
            case 1:
                ajouter();
                break;
            case 2:
                printf("Entrez le numero de l'etudiant: ");
                scanf("%d", &numero);
                modifier_ou_supprimer_etudiant(numero);
                break;
            case 3:
                afficher_tous_les_etudiants();
                break;
            case 4:
                calculer_moyennes();
                break;
            case 5:
                rechercher_etudiant();
                break;
            case 6:
                statistiques();  // Appel de la nouvelle fonction
                break;
            case 7:
                printf("Au revoir !\n");
                break;
            default:
                printf("Choix invalide.\n");
        }
    } while (choix != 7);

    return 0;
}
